1
00:00:00,000 --> 00:00:02,000
One more keyword I want to make you aware of in C#

2
00:00:02,000 --> 00:00:04,000
is the static keyword.

3
00:00:04,000 --> 00:00:07,000
The static keyword is a bit of an advanced topic,

4
00:00:07,000 --> 00:00:09,000
which we'll return to in a later module to see

5
00:00:09,000 --> 00:00:10,000
in more detail.

6
00:00:10,000 --> 00:00:12,000
But I want to give you a basic introduction now

7
00:00:12,000 --> 00:00:14,000
to explain some of the code that we've seen already

8
00:00:14,000 --> 00:00:16,000
and some of the code that we still need to write.

9
00:00:16,000 --> 00:00:19,000
Members of a class can be marked as static,

10
00:00:19,000 --> 00:00:21,000
meaning static is a keyword that you can apply

11
00:00:21,000 --> 00:00:23,000
to a method or field.

12
00:00:23,000 --> 00:00:25,000
The code on the screen, imagine it inside

13
00:00:25,000 --> 00:00:26,000
of the GradeBook class.

14
00:00:26,000 --> 00:00:29,000
It is defining two publicly available fields,

15
00:00:29,000 --> 00:00:32,000
one called minimum grade and one called maximum grade.

16
00:00:32,000 --> 00:00:34,000
And it's using that field initializer syntax

17
00:00:34,000 --> 00:00:38,000
to initialize these fields to zero and 100, respectively.

18
00:00:38,000 --> 00:00:40,000
These fields are static fields,

19
00:00:40,000 --> 00:00:42,000
and here's what's important about a static field.

20
00:00:42,000 --> 00:00:46,000
A static field or method is something you can access in code

21
00:00:46,000 --> 00:00:49,000
without creating an instance of a class.

22
00:00:49,000 --> 00:00:51,000
Generally speaking, to do any useful work with a class,

23
00:00:51,000 --> 00:00:54,000
you need to use the new keyword to call a constructor

24
00:00:54,000 --> 00:00:56,000
and create an instance of the class,

25
00:00:56,000 --> 00:00:58,000
but there are classes out there with static members

26
00:00:58,000 --> 00:01:01,000
that can do work without creating an instance.

27
00:01:01,000 --> 00:01:03,000
Instead, you reference the field or the method

28
00:01:03,000 --> 00:01:06,000
using the type name, and then the name of the field

29
00:01:06,000 --> 00:01:07,000
or the method.

30
00:01:07,000 --> 00:01:10,000
So GradeBook.MaximumGrade is an expression

31
00:01:10,000 --> 00:01:11,000
that returned 100.

32
00:01:11,000 --> 00:01:14,000
And I don't need an instance of GradeBook to use that.

33
00:01:14,000 --> 00:01:17,000
This is how Console.WriteLine works.

34
00:01:17,000 --> 00:01:20,000
Console is a class, but I don't need to create

35
00:01:20,000 --> 00:01:22,000
an instance of console to use the class.

36
00:01:22,000 --> 00:01:24,000
It has static methods that I can reach

37
00:01:24,000 --> 00:01:26,000
and invoke, like WriteLines.

38
00:01:26,000 --> 00:01:28,000
I just use the name of the class and then a dot.

39
00:01:28,000 --> 00:01:31,000
So Console.WriteLine.

40
00:01:31,000 --> 00:01:33,000
I will warn you now that you have to be a little bit careful

41
00:01:33,000 --> 00:01:34,000
about using statics.

42
00:01:34,000 --> 00:01:36,000
They can have some unfortunate and negative impacts

43
00:01:36,000 --> 00:01:38,000
on the design of your software.

44
00:01:38,000 --> 00:01:40,000
We'll talk about some of the ramifications of static

45
00:01:40,000 --> 00:01:43,000
later in the course, but right now I wanted to make you

46
00:01:43,000 --> 00:01:46,000
aware of what was happening with that static keyword

47
00:01:46,000 --> 00:01:49,000
and how we were invoking code like Console.WriteLine.

48
00:01:49,000 --> 00:01:51,000
And we'll use this knowledge in the next clip

49
00:01:51,000 --> 00:59:00,000
when we add some more features to the GradeBook.

