1
00:00:01,000 --> 00:00:06,000
C# includes a number of keywords that allow you to unconditionally jump to some target.

2
00:00:06,000 --> 00:00:10,000
These keywords include break, continue, goto, return, and throw.

3
00:00:10,000 --> 00:00:14,000
We've already seen break, we know that we can use break inside the case label of a switch statement,

4
00:00:14,000 --> 00:00:19,000
but you can also use a break inside of a while loop, a do loop, a for loop, or a foreach loop,

5
00:00:19,000 --> 00:00:24,000
to break out of a loop and stop looping. For example, here is a foreach statement that's going to loop

6
00:00:24,000 --> 00:00:30,000
through some collection of integers, and inside of the code if the age variable holds the value 21,

7
00:00:30,000 --> 00:00:35,000
we're going to break out of this loop. So if age is equal to 21, even if there are more items left on that

8
00:00:35,000 --> 00:00:40,000
collection, we're going to stop execution of the foreach loop and continue execution on the statement that

9
00:00:40,000 --> 00:00:45,000
is after the foreach statement. The continue statement in similar, except that instead of breaking out of

10
00:00:45,000 --> 00:00:51,000
the foreach statement, we're going to skip executing any code after the continue statement and go to the next

11
00:00:51,000 --> 00:00:57,000
iteration of a loop. So in the code if we encounter an age value equal to 2, we're going to continue the

12
00:00:57,000 --> 00:01:01,000
loop, we're not going to execute anything that follows, and we're not going to jump out of the foreach statement.

13
00:01:01,000 --> 00:01:06,000
Essentially the continue statement starts the next iteration, and you can use it again inside of a while,

14
00:01:06,000 --> 00:01:12,000
a do while, a for, or a foreach statement. And then there is a goto statement in C#.

15
00:01:12,000 --> 00:01:16,000
You can use the goto statement to jump to another statement that is marked by a label.

16
00:01:16,000 --> 00:01:22,000
So in this version of the foreach loop, if we encounter age equal to 2, we're going to jump execution down to

17
00:01:22,000 --> 00:01:26,000
the label with the name of skip, and jump over any code that was in between.

18
00:01:26,000 --> 00:01:31,000
I do have to say in over 25 years of programming with various languages, I've never had to use a goto

19
00:01:31,000 --> 00:01:37,000
statement, and most programmers avoid goto at all costs, because it does make a program harder to follow.

20
00:01:37,000 --> 00:01:42,000
The return statement, this is something that we've also used in the demos of this course,

21
00:01:42,000 --> 00:01:46,000
but I do want to point out that you can use a return statement with a void method.

22
00:01:46,000 --> 00:01:51,000
So typically what we've done is, we'd have a method that has to return a string or an integer or some type of

23
00:01:51,000 --> 00:01:58,000
object like a GradeBook Statistics object, and we used a return statement to return the value of some variable.

24
00:01:58,000 --> 00:02:04,000
But it is legal to use return when you have a void method, you're just not allowed to pass a value back to the caller.

25
00:02:04,000 --> 00:02:09,000
In that case you just have the return statement. So in this foreach loop, if we encounter an age equal to

26
00:02:09,000 --> 00:02:15,000
21, we are not only going to break out of the loop, we're going to jump out of the method itself.

27
00:02:15,000 --> 00:02:21,000
So if there was any additional code before we reach the end of the method, that code wouldn't execute.

28
00:02:21,000 --> 00:59:00,000
The last jumping statement that we need to cover is the throw statement, which it means it's time to talk about exceptions.

